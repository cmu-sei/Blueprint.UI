{
  "openapi": "3.0.1",
  "info": {
    "title": "Blueprint API",
    "version": "v1"
  },
  "paths": {
    "/api/msels/{mselId}/datafields": {
      "get": {
        "tags": [
          "DataField"
        ],
        "summary": "Gets DataFields by msel",
        "description": "Returns a list of DataFields for the msel.",
        "operationId": "getByMsel",
        "parameters": [
          {
            "name": "mselId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataField"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataField"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataField"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/datafields/{id}": {
      "get": {
        "tags": [
          "DataField"
        ],
        "summary": "Gets a specific DataField by id",
        "description": "Returns the DataField with the id specified",
        "operationId": "getDataField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataField",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataField"
        ],
        "summary": "Updates a  DataField",
        "description": "Updates a DataField with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the dataField parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateDataField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the DataField to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated DataField values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataField"
        ],
        "summary": "Deletes a  DataField",
        "description": "Deletes a  DataField with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteDataField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataField to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/datafields": {
      "post": {
        "tags": [
          "DataField"
        ],
        "summary": "Creates a new DataField",
        "description": "Creates a new DataField with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createDataField",
        "requestBody": {
          "description": "The data used to create the DataField",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataField"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataField"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{dataFieldId}/dataoptions": {
      "get": {
        "tags": [
          "DataOption"
        ],
        "summary": "Gets DataOptions by msel",
        "description": "Returns a list of DataOptions for the msel.",
        "operationId": "getByDataField",
        "parameters": [
          {
            "name": "dataFieldId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataOption"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataOption"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataOption"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/dataoptions/{id}": {
      "get": {
        "tags": [
          "DataOption"
        ],
        "summary": "Gets a specific DataOption by id",
        "description": "Returns the DataOption with the id specified",
        "operationId": "getDataOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataOption",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataOption"
        ],
        "summary": "Updates a  DataOption",
        "description": "Updates a DataOption with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the dataOption parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateDataOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the DataOption to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated DataOption values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataOption"
        ],
        "summary": "Deletes a  DataOption",
        "description": "Deletes a  DataOption with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteDataOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataOption to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/dataoptions": {
      "post": {
        "tags": [
          "DataOption"
        ],
        "summary": "Creates a new DataOption",
        "description": "Creates a new DataOption with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createDataOption",
        "requestBody": {
          "description": "The data used to create the DataOption",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataOption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/datavalues/{id}": {
      "get": {
        "tags": [
          "DataValue"
        ],
        "summary": "Gets a specific DataValue by id",
        "description": "Returns the DataValue with the id specified",
        "operationId": "getDataValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataValue",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataValue"
        ],
        "summary": "Updates a  DataValue",
        "description": "Updates a DataValue with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the dataValue parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateDataValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the DataValue to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated DataValue values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataValue"
        ],
        "summary": "Deletes a  DataValue",
        "description": "Deletes a  DataValue with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteDataValue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the DataValue to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/datavalues": {
      "post": {
        "tags": [
          "DataValue"
        ],
        "summary": "Creates a new DataValue",
        "description": "Creates a new DataValue with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createDataValue",
        "requestBody": {
          "description": "The data used to create the DataValue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataValue"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataValue"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/healthcheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Responds when this api is functional",
        "description": "Returns a health message.\r\n<para />\r\nNo user authentication is required",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{mselId}/moves": {
      "get": {
        "tags": [
          "Move"
        ],
        "summary": "Gets Moves by msel",
        "description": "Returns a list of Moves for the msel.",
        "operationId": "getByMsel",
        "parameters": [
          {
            "name": "mselId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/moves/{id}": {
      "get": {
        "tags": [
          "Move"
        ],
        "summary": "Gets a specific Move by id",
        "description": "Returns the Move with the id specified",
        "operationId": "getMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Move",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Move"
        ],
        "summary": "Updates a  Move",
        "description": "Updates a Move with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the move parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Move to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Move values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Move"
        ],
        "summary": "Deletes a  Move",
        "description": "Deletes a  Move with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Move to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/moves": {
      "post": {
        "tags": [
          "Move"
        ],
        "summary": "Creates a new Move",
        "description": "Creates a new Move with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createMove",
        "requestBody": {
          "description": "The data used to create the Move",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels": {
      "get": {
        "tags": [
          "Msel"
        ],
        "summary": "Gets Msels",
        "description": "Returns a list of Msels.",
        "operationId": "getMsels",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Whether or not to return records only for a designated team",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Whether or not to return records only for descriptions containing the designated string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Msel"
        ],
        "summary": "Creates a new Msel",
        "description": "Creates a new Msel with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createMsel",
        "requestBody": {
          "description": "The data used to create the Msel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/mine": {
      "get": {
        "tags": [
          "Msel"
        ],
        "summary": "Gets Msels for the current user",
        "description": "Returns a list of the current user's active Msels.",
        "operationId": "getMyMsels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Msel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{id}": {
      "get": {
        "tags": [
          "Msel"
        ],
        "summary": "Gets a specific Msel by id",
        "description": "Returns the Msel with the id specified",
        "operationId": "getMsel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Msel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Msel"
        ],
        "summary": "Updates a Msel",
        "description": "Updates a Msel with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the msel parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateMsel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Msel to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Msel values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Msel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Msel"
        ],
        "summary": "Deletes a Msel",
        "description": "Deletes a Msel with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteMsel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Msel to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{id}/data": {
      "get": {
        "tags": [
          "Msel"
        ],
        "summary": "Gets specific Msel data by id",
        "description": "Returns a DataTable for the Msel with the id specified",
        "operationId": "getMselData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Msel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataTable"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTable"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/xlsx": {
      "post": {
        "tags": [
          "Msel"
        ],
        "summary": "Upload file(s)",
        "description": "File objects will be returned in the same order as their respective files within the form.",
        "operationId": "uploadXlsxFiles",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MselId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "MselTemplateId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "TeamId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "ToUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "MselId": {
                  "style": "form"
                },
                "MselTemplateId": {
                  "style": "form"
                },
                "TeamId": {
                  "style": "form"
                },
                "ToUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{id}/xlsx": {
      "put": {
        "tags": [
          "Msel"
        ],
        "summary": "Replace a msel by id with data in xlsx file",
        "operationId": "replaceWithXlsxFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the msel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MselId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "MselTemplateId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "TeamId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "ToUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "MselId": {
                  "style": "form"
                },
                "MselTemplateId": {
                  "style": "form"
                },
                "TeamId": {
                  "style": "form"
                },
                "ToUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Msel"
        ],
        "summary": "Download a msel by id as xlsx file",
        "operationId": "download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the msel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/msels/{mselId}/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Gets Organizations by msel",
        "description": "Returns a list of Organizations for the msel.",
        "operationId": "getByMsel",
        "parameters": [
          {
            "name": "mselId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Gets a specific Organization by id",
        "description": "Returns the Organization with the id specified",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Organization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Updates a  Organization",
        "description": "Updates a Organization with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the organization parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Organization to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Organization values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Deletes a  Organization",
        "description": "Deletes a  Organization with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Organization to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Creates a new Organization",
        "description": "Creates a new Organization with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createOrganization",
        "requestBody": {
          "description": "The data used to create the Organization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets all Permission in the system",
        "description": "Returns a list of all of the Permissions in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Creates a new Permission",
        "description": "Creates a new Permission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createPermission",
        "requestBody": {
          "description": "The data to create the Permission with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/mine": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets Permissions for the current user",
        "description": "Returns a list of the current user's Permissions.",
        "operationId": "getMyPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets Permissions for the specified user",
        "description": "Returns a list of the specified user's Permissions.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getPermissionsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets a specific Permission by id",
        "description": "Returns the Permission with the id specified\r\n<para />\r\nAccessible to a SuperUser or a User that is a member of a Team within the specified Permission",
        "operationId": "getPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Permission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission"
        ],
        "summary": "Updates a Permission",
        "description": "Updates a Permission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Permission",
        "operationId": "updatePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Exericse to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Permission values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Deletes a Permission",
        "description": "Deletes a Permission with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Permission",
        "operationId": "deletePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Permission to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scenarioevents": {
      "get": {
        "tags": [
          "ScenarioEvent"
        ],
        "summary": "Gets ScenarioEvents",
        "description": "Returns a list of ScenarioEvents.",
        "operationId": "getScenarioEvents",
        "parameters": [
          {
            "name": "MselId",
            "in": "query",
            "description": "Whether or not to return records only for a designated MSEL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Whether or not to return records only for a designated team",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MoveId",
            "in": "query",
            "description": "Whether or not to return records only for a designated move",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScenarioEvent"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScenarioEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScenarioEvent"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScenarioEvent"
        ],
        "summary": "Creates a new ScenarioEvent",
        "description": "Creates a new ScenarioEvent with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createScenarioEvent",
        "requestBody": {
          "description": "The data to create the ScenarioEvent with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scenarioevents/{id}": {
      "get": {
        "tags": [
          "ScenarioEvent"
        ],
        "summary": "Gets a specific ScenarioEvent by id",
        "description": "Returns the ScenarioEvent with the id specified\r\n<para />\r\nAccessible to a User that is a member of a Team within the specified ScenarioEvent",
        "operationId": "getScenarioEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScenarioEvent",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScenarioEvent"
        ],
        "summary": "Updates an ScenarioEvent",
        "description": "Updates an ScenarioEvent with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified ScenarioEvent",
        "operationId": "updateScenarioEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the ScenarioEvent to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ScenarioEvent values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioEvent"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScenarioEvent"
        ],
        "summary": "Deletes an ScenarioEvent",
        "description": "Deletes an ScenarioEvent with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified ScenarioEvent",
        "operationId": "deleteScenarioEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScenarioEvent to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets all Team in the system",
        "description": "Returns a list of all of the Teams in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeams",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Creates a new Team",
        "description": "Creates a new Team with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createTeam",
        "requestBody": {
          "description": "The data to create the Team with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/mine": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Teams for the current user",
        "description": "Returns a list of the current user's Teams.",
        "operationId": "getMyTeams",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Teams for the specified user",
        "description": "Returns a list of the specified user's Teams.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets a specific Team by id",
        "description": "Returns the Team with the id specified\r\n<para />\r\nAccessible to a SuperUser or a User that is a member of a Team within the specified Team",
        "operationId": "getTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Team",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Updates a Team",
        "description": "Updates a Team with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Team",
        "operationId": "updateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Exericse to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Team values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Deletes a Team",
        "description": "Deletes a Team with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Team",
        "operationId": "deleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Team to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers": {
      "get": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Gets all TeamUsers in the system",
        "description": "Returns a list of all of the TeamUsers in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Creates a new TeamUser",
        "description": "Creates a new TeamUser with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createTeamUser",
        "requestBody": {
          "description": "The data to create the TeamUser with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}": {
      "get": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Gets a specific TeamUser by id",
        "description": "Returns the TeamUser with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamUser",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Deletes a TeamUser",
        "description": "Deletes a TeamUser with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteTeamUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamUser to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{teamId}/users/{userId}": {
      "delete": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Deletes a TeamUser by user ID and team ID",
        "description": "Deletes a TeamUser with the specified user ID and team ID\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteTeamUserByIds",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "ID of a team.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of a user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all Users in the system",
        "description": "Returns a list of all of the Users in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates a new User",
        "description": "Creates a new User with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createUser",
        "requestBody": {
          "description": "The data to create the User with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets a specific User by id",
        "description": "Returns the User with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates a  User",
        "description": "Updates a User with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the user parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the User to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated User values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a User",
        "description": "Deletes a User with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the User to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{teamId}/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all Users for a team",
        "description": "Returns a list of all of the Users on the team.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamUsers",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "The id of the Team",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/usermselroles": {
      "get": {
        "tags": [
          "UserMselRole"
        ],
        "summary": "Gets all UserMselRoles in the system",
        "description": "Returns a list of all of the UserMselRoles in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserMselRoles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMselRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMselRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMselRole"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserMselRole"
        ],
        "summary": "Creates a new UserMselRole",
        "description": "Creates a new UserMselRole with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createUserMselRole",
        "requestBody": {
          "description": "The data to create the UserMselRole with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMselRole"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMselRole"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserMselRole"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/usermselroles/{id}": {
      "get": {
        "tags": [
          "UserMselRole"
        ],
        "summary": "Gets a specific UserMselRole by id",
        "description": "Returns the UserMselRole with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserMselRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserMselRole",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMselRole"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserMselRole"
        ],
        "summary": "Deletes a UserMselRole",
        "description": "Deletes a UserMselRole with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUserMselRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserMselRole to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/userpermissions": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Gets all UserPermissions in the system",
        "description": "Returns a list of all of the UserPermissions in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Creates a new UserPermission",
        "description": "Creates a new UserPermission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createUserPermission",
        "requestBody": {
          "description": "The data to create the UserPermission with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/userpermissions/{id}": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Gets a specific UserPermission by id",
        "description": "Returns the UserPermission with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserPermission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Deletes a UserPermission",
        "description": "Deletes a UserPermission with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUserPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserPermission to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/permissions/{permissionId}": {
      "delete": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Deletes a UserPermission by user ID and permission ID",
        "description": "Deletes a UserPermission with the specified user ID and permission ID\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUserPermissionByIds",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of a user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permissionId",
            "in": "path",
            "description": "ID of a permission.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "Calendar": {
        "type": "object",
        "properties": {
          "minSupportedDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "maxSupportedDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "algorithmType": {
            "$ref": "#/components/schemas/CalendarAlgorithmType"
          },
          "isReadOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "eras": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "readOnly": true
          },
          "twoDigitYearMax": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CalendarAlgorithmType": {
        "enum": [
          "Unknown",
          "SolarCalendar",
          "LunarCalendar",
          "LunisolarCalendar"
        ],
        "type": "string"
      },
      "CalendarWeekRule": {
        "enum": [
          "FirstDay",
          "FirstFullWeek",
          "FirstFourDayWeek"
        ],
        "type": "string"
      },
      "CallingConventions": {
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "type": "string"
      },
      "CompareInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "$ref": "#/components/schemas/SortVersion"
          },
          "lcid": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "CultureInfo": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/CultureInfo"
          },
          "lcid": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "keyboardLayoutId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "ietfLanguageTag": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "englishName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twoLetterISOLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "threeLetterISOLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "threeLetterWindowsLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "compareInfo": {
            "$ref": "#/components/schemas/CompareInfo"
          },
          "textInfo": {
            "$ref": "#/components/schemas/TextInfo"
          },
          "isNeutralCulture": {
            "type": "boolean",
            "readOnly": true
          },
          "cultureTypes": {
            "$ref": "#/components/schemas/CultureTypes"
          },
          "numberFormat": {
            "$ref": "#/components/schemas/NumberFormatInfo"
          },
          "dateTimeFormat": {
            "$ref": "#/components/schemas/DateTimeFormatInfo"
          },
          "calendar": {
            "$ref": "#/components/schemas/Calendar"
          },
          "optionalCalendars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Calendar"
            },
            "nullable": true,
            "readOnly": true
          },
          "useUserOverride": {
            "type": "boolean"
          },
          "isReadOnly": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CultureTypes": {
        "enum": [
          "NeutralCultures",
          "SpecificCultures",
          "InstalledWin32Cultures",
          "AllCultures",
          "UserCustomCulture",
          "ReplacementCultures",
          "WindowsOnlyCultures",
          "FrameworkCultures"
        ],
        "type": "string"
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataColumn": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/ISite"
          },
          "container": {
            "$ref": "#/components/schemas/IContainer"
          },
          "designMode": {
            "type": "boolean",
            "readOnly": true
          },
          "allowDBNull": {
            "type": "boolean",
            "default": true
          },
          "autoIncrement": {
            "type": "boolean",
            "default": false
          },
          "autoIncrementSeed": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "autoIncrementStep": {
            "type": "integer",
            "format": "int64",
            "default": 1
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/Type"
          },
          "dateTimeMode": {
            "$ref": "#/components/schemas/DataSetDateTime"
          },
          "defaultValue": {
            "nullable": true
          },
          "expression": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "extendedProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "default": "-1"
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "ordinal": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "readOnly": {
            "type": "boolean",
            "default": false
          },
          "table": {
            "$ref": "#/components/schemas/DataTable"
          },
          "unique": {
            "type": "boolean",
            "default": false
          },
          "columnMapping": {
            "$ref": "#/components/schemas/MappingType"
          }
        },
        "additionalProperties": false
      },
      "DataField": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mselId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/DataFieldType"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isChosenFromList": {
            "type": "boolean"
          },
          "dataOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataOption"
            },
            "nullable": true
          },
          "cellMetadata": {
            "type": "string",
            "nullable": true
          },
          "columnMetadata": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataFieldType": {
        "enum": [
          "String",
          "Integer",
          "Double",
          "Boolean",
          "DateTime"
        ],
        "type": "string"
      },
      "DataOption": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dataFieldId": {
            "type": "string",
            "format": "uuid"
          },
          "optionName": {
            "type": "string",
            "nullable": true
          },
          "optionValue": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataSet": {
        "type": "object",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/IContainer"
          },
          "designMode": {
            "type": "boolean",
            "readOnly": true
          },
          "remotingFormat": {
            "$ref": "#/components/schemas/SerializationFormat"
          },
          "schemaSerializationMode": {
            "$ref": "#/components/schemas/SchemaSerializationMode"
          },
          "caseSensitive": {
            "type": "boolean",
            "default": false
          },
          "defaultViewManager": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "enforceConstraints": {
            "type": "boolean",
            "default": true
          },
          "dataSetName": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "extendedProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "hasErrors": {
            "type": "boolean",
            "readOnly": true
          },
          "isInitialized": {
            "type": "boolean",
            "readOnly": true
          },
          "locale": {
            "$ref": "#/components/schemas/CultureInfo"
          },
          "site": {
            "$ref": "#/components/schemas/ISite"
          },
          "relations": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "tables": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DataSetDateTime": {
        "enum": [
          "Local",
          "Unspecified",
          "UnspecifiedLocal",
          "Utc"
        ],
        "type": "string"
      },
      "DataTable": {
        "type": "object",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/IContainer"
          },
          "designMode": {
            "type": "boolean",
            "readOnly": true
          },
          "caseSensitive": {
            "type": "boolean"
          },
          "isInitialized": {
            "type": "boolean",
            "readOnly": true
          },
          "remotingFormat": {
            "$ref": "#/components/schemas/SerializationFormat"
          },
          "childRelations": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "columns": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "constraints": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "dataSet": {
            "$ref": "#/components/schemas/DataSet"
          },
          "defaultView": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "displayExpression": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "extendedProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "hasErrors": {
            "type": "boolean",
            "readOnly": true
          },
          "locale": {
            "$ref": "#/components/schemas/CultureInfo"
          },
          "minimumCapacity": {
            "type": "integer",
            "format": "int32",
            "default": "50"
          },
          "parentRelations": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "primaryKey": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataColumn"
            },
            "nullable": true
          },
          "rows": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "tableName": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "default": "",
            "nullable": true
          },
          "site": {
            "$ref": "#/components/schemas/ISite"
          }
        },
        "additionalProperties": false
      },
      "DataValue": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "scenarioEventId": {
            "type": "string",
            "format": "uuid"
          },
          "dataFieldId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DateTimeFormatInfo": {
        "type": "object",
        "properties": {
          "amDesignator": {
            "type": "string",
            "nullable": true
          },
          "calendar": {
            "$ref": "#/components/schemas/Calendar"
          },
          "dateSeparator": {
            "type": "string",
            "nullable": true
          },
          "firstDayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "calendarWeekRule": {
            "$ref": "#/components/schemas/CalendarWeekRule"
          },
          "fullDateTimePattern": {
            "type": "string",
            "nullable": true
          },
          "longDatePattern": {
            "type": "string",
            "nullable": true
          },
          "longTimePattern": {
            "type": "string",
            "nullable": true
          },
          "monthDayPattern": {
            "type": "string",
            "nullable": true
          },
          "pmDesignator": {
            "type": "string",
            "nullable": true
          },
          "rfC1123Pattern": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          },
          "sortableDateTimePattern": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "timeSeparator": {
            "type": "string",
            "nullable": true
          },
          "universalSortableDateTimePattern": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "yearMonthPattern": {
            "type": "string",
            "nullable": true
          },
          "abbreviatedDayNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shortestDayNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dayNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "abbreviatedMonthNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "monthNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "nativeCalendarName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "abbreviatedMonthGenitiveNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "monthGenitiveNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "DigitShapes": {
        "enum": [
          "Context",
          "None",
          "NativeNational"
        ],
        "type": "string"
      },
      "EventAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName"
        ],
        "type": "string"
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "type": "string"
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "type": "string"
      },
      "IComponent": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/ISite"
          }
        },
        "additionalProperties": false
      },
      "IContainer": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "ISite": {
        "type": "object",
        "properties": {
          "component": {
            "$ref": "#/components/schemas/IComponent"
          },
          "container": {
            "$ref": "#/components/schemas/IContainer"
          },
          "designMode": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "ItemStatus": {
        "enum": [
          "Pending",
          "Active",
          "Cancelled",
          "Complete",
          "Archived",
          "Approved",
          "Rejected"
        ],
        "type": "string"
      },
      "LayoutKind": {
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "type": "string"
      },
      "MappingType": {
        "enum": [
          "Element",
          "Attribute",
          "SimpleContent",
          "Hidden"
        ],
        "type": "string"
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "type": "string"
      },
      "MethodAttributes": {
        "enum": [
          "ReuseSlot",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "type": "string"
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodImplAttributes": {
        "enum": [
          "IL",
          "Native",
          "OPTIL",
          "Runtime",
          "Unmanaged",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "type": "string"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Move": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "moveNumber": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mselId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Msel": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          },
          "teamId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "galleryExhibitId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "citeEvaluationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "steamfitterScenarioId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "moves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Move"
            },
            "nullable": true
          },
          "headerRowMetadata": {
            "type": "string",
            "nullable": true
          },
          "dataFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataField"
            },
            "nullable": true
          },
          "scenarioEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MselRole": {
        "enum": [
          "Owner",
          "Editor",
          "Approver"
        ],
        "type": "string"
      },
      "NumberFormatInfo": {
        "type": "object",
        "properties": {
          "currencyDecimalDigits": {
            "type": "integer",
            "format": "int32"
          },
          "currencyDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "currencyGroupSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "numberGroupSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "percentGroupSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "currencyGroupSeparator": {
            "type": "string",
            "nullable": true
          },
          "currencySymbol": {
            "type": "string",
            "nullable": true
          },
          "naNSymbol": {
            "type": "string",
            "nullable": true
          },
          "currencyNegativePattern": {
            "type": "integer",
            "format": "int32"
          },
          "numberNegativePattern": {
            "type": "integer",
            "format": "int32"
          },
          "percentPositivePattern": {
            "type": "integer",
            "format": "int32"
          },
          "percentNegativePattern": {
            "type": "integer",
            "format": "int32"
          },
          "negativeInfinitySymbol": {
            "type": "string",
            "nullable": true
          },
          "negativeSign": {
            "type": "string",
            "nullable": true
          },
          "numberDecimalDigits": {
            "type": "integer",
            "format": "int32"
          },
          "numberDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "numberGroupSeparator": {
            "type": "string",
            "nullable": true
          },
          "currencyPositivePattern": {
            "type": "integer",
            "format": "int32"
          },
          "positiveInfinitySymbol": {
            "type": "string",
            "nullable": true
          },
          "positiveSign": {
            "type": "string",
            "nullable": true
          },
          "percentDecimalDigits": {
            "type": "integer",
            "format": "int32"
          },
          "percentDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "percentGroupSeparator": {
            "type": "string",
            "nullable": true
          },
          "percentSymbol": {
            "type": "string",
            "nullable": true
          },
          "perMilleSymbol": {
            "type": "string",
            "nullable": true
          },
          "nativeDigits": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "digitSubstitution": {
            "$ref": "#/components/schemas/DigitShapes"
          }
        },
        "additionalProperties": false
      },
      "Organization": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mselId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ParameterAttributes": {
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PropertyAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "ScenarioEvent": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mselId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int32"
          },
          "rowMetadata": {
            "type": "string",
            "nullable": true
          },
          "dataValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchemaSerializationMode": {
        "enum": [
          "IncludeSchema",
          "ExcludeSchema"
        ],
        "type": "string"
      },
      "SecurityRuleSet": {
        "enum": [
          "None",
          "Level1",
          "Level2"
        ],
        "type": "string"
      },
      "SerializationFormat": {
        "enum": [
          "Xml",
          "Binary"
        ],
        "type": "string"
      },
      "SortVersion": {
        "type": "object",
        "properties": {
          "fullVersion": {
            "type": "integer",
            "format": "int32"
          },
          "sortId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "Team": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamUser": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "additionalProperties": false
      },
      "TextInfo": {
        "type": "object",
        "properties": {
          "ansiCodePage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "oemCodePage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "macCodePage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ebcdicCodePage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "lcid": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "cultureName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isReadOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "listSeparator": {
            "type": "string",
            "nullable": true
          },
          "isRightToLeft": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeAttributes": {
        "enum": [
          "NotPublic",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "NestedFamORAssem",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "CustomFormatClass",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "type": "string"
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserMselRole": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mselId": {
            "type": "string",
            "format": "uuid"
          },
          "msel": {
            "$ref": "#/components/schemas/Msel"
          },
          "scenarioEventId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "scenarioEvent": {
            "$ref": "#/components/schemas/ScenarioEvent"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "$ref": "#/components/schemas/MselRole"
          }
        },
        "additionalProperties": false
      },
      "UserPermission": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "permissionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:5000/connect/authorize",
            "tokenUrl": "http://localhost:5000/connect/token",
            "scopes": {
              "blueprint": "public api access"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "blueprint"
      ]
    }
  ]
}
